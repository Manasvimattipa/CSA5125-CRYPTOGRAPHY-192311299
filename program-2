#include <stdio.h>
#include <string.h>
#include <ctype.h>

void encrypt(char *plaintext, char *ciphertext_alphabet) {
    for (int i = 0; plaintext[i] != '\0'; ++i) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            int index = tolower(plaintext[i]) - 'a';
            char cipher_char = ciphertext_alphabet[index];
            plaintext[i] = isupper(plaintext[i]) ? toupper(cipher_char) : cipher_char;
        }
    }
}


void decrypt(char *ciphertext, char *ciphertext_alphabet) {
    char reverse_map[26];

    
    for (int i = 0; i < 26; ++i) {
        reverse_map[ciphertext_alphabet[i] - 'a'] = 'a' + i;
    }

    for (int i = 0; ciphertext[i] != '\0'; ++i) {
        if (isalpha(ciphertext[i])) {
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            char ch = tolower(ciphertext[i]);
            char plain_char = reverse_map[ch - 'a'];
            ciphertext[i] = isupper(ciphertext[i]) ? toupper(plain_char) : plain_char;
        }
    }
}

int main() {
    char text[100];
   
    char cipher_key[] = "qwertyuiopasdfghjklzxcvbnm";
    int choice;

    printf("Enter the message: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0'; 

    printf("Choose:\n1. Encrypt\n2. Decrypt\nEnter choice: ");
    scanf("%d", &choice);

    if (choice == 1) {
        encrypt(text, cipher_key);
        printf("Encrypted text: %s\n", text);
    } else if (choice == 2) {
        decrypt(text, cipher_key);
        printf("Decrypted text: %s\n", text);
    } else {
        printf("Invalid choice.\n");
    }

    return 0;
}
