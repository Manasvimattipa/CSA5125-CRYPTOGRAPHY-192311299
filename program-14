#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MOD 26

void encrypt(char *plaintext, int *key, char *ciphertext) {
    int i;
    for (i = 0; plaintext[i]; i++) {
        if (isalpha(plaintext[i])) {
            int p = tolower(plaintext[i]) - 'a';
            int c = (p + key[i]) % MOD;
            ciphertext[i] = c + 'a';
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[i] = '\0';
}

void decrypt(char *ciphertext, int *key, char *plaintext) {
    int i;
    for (i = 0; ciphertext[i]; i++) {
        if (isalpha(ciphertext[i])) {
            int c = tolower(ciphertext[i]) - 'a';
            int p = (c - key[i] + MOD) % MOD;
            plaintext[i] = p + 'a';
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[i] = '\0';
}

void findKey(char *ciphertext, char *plaintext, int *key) {
    for (int i = 0; plaintext[i]; i++) {
        if (isalpha(plaintext[i]) && isalpha(ciphertext[i])) {
            int p = tolower(plaintext[i]) - 'a';
            int c = tolower(ciphertext[i]) - 'a';
            key[i] = (c - p + MOD) % MOD;
        }
    }
}

int main() {
    char pt1[] = "sendmoremoney";
    int key1[] = {9, 0, 1, 7, 23, 15, 21, 14, 11, 11, 2, 8, 9};
    char ct1[100], dt1[100];

    encrypt(pt1, key1, ct1);
    printf("Encrypted: %s\n", ct1);

    decrypt(ct1, key1, dt1);
    printf("Decrypted: %s\n", dt1);

    char pt2[] = "cashnotneeded";
    int key2[100];
    findKey(ct1, pt2, key2);

    printf("New key for ciphertext to decrypt to 'cashnotneeded':\n");
    for (int i = 0; i < strlen(pt2); i++)
        printf("%d ", key2[i]);
    printf("\n");

    return 0;
}
