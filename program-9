#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

void prepareKeySquare(char key[], char square[SIZE][SIZE]) {
    int i, j, k = 0;
    int used[26] = {0};
    used['J' - 'A'] = 1;

    for (i = 0; i < strlen(key); i++) {
        char ch = toupper(key[i]);
        if (isalpha(ch) && !used[ch - 'A']) {
            square[k / SIZE][k % SIZE] = ch;
            used[ch - 'A'] = 1;
            k++;
        }
    }

    for (i = 0; i < 26; i++) {
        if (!used[i]) {
            square[k / SIZE][k % SIZE] = 'A' + i;
            k++;
        }
    }
}

void findPosition(char square[SIZE][SIZE], char ch, int *row, int *col) {
    int i, j;
    if (ch == 'J') ch = 'I';
    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (square[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void decryptPair(char a, char b, char square[SIZE][SIZE], char *out1, char *out2) {
    int row1, col1, row2, col2;
    findPosition(square, a, &row1, &col1);
    findPosition(square, b, &row2, &col2);

    if (row1 == row2) {
        *out1 = square[row1][(col1 + SIZE - 1) % SIZE];
        *out2 = square[row2][(col2 + SIZE - 1) % SIZE];
    } else if (col1 == col2) {
        *out1 = square[(row1 + SIZE - 1) % SIZE][col1];
        *out2 = square[(row2 + SIZE - 1) % SIZE][col2];
    } else {
        *out1 = square[row1][col2];
        *out2 = square[row2][col1];
    }
}

void decryptPlayfair(char *ciphertext, char *key) {
    char square[SIZE][SIZE];
    char a, b, out1, out2;
    int i;

    prepareKeySquare(key, square);

    for (i = 0; i < strlen(ciphertext); i += 2) {
        a = ciphertext[i];
        b = ciphertext[i + 1];
        if (!isalpha(a) || !isalpha(b)) continue;
        decryptPair(toupper(a), toupper(b), square, &out1, &out2);
        printf("%c%c", out1, out2);
    }
    printf("\n");
}

int main() {
    char ciphertext[] =
        "KXJEYUREBEZWEHEWRYTUHEYFS"
        "KREHEGOYFIWTTTUOLKSYCAJPO"
        "BOTEIZONTXBYBNTGONEYCUZWR"
        "GDSONSXBOUYWRHEBAAHYUSEDQ";
    char key[] = "MONARCHY";

    decryptPlayfair(ciphertext, key);

    return 0;
}
